import{_ as d,c as p,b as e,d as n,e as l,f as i,a,r,o}from"./app-DXiP8jJS.js";const u="/cjp-cli-dev-docs/assets/init-command-D5g5Lpl4.gif",m="/cjp-cli-dev-docs/assets/publish-command-LuGIJ0vU.gif",v="/cjp-cli-dev-docs/assets/rollback-command-v3kpUr0q.gif",b="/cjp-cli-dev-docs/assets/add-command-wPz1qIG1.gif",g={},c={class:"hint-container tip"},h={class:"hint-container tip"},E={class:"hint-container tip"},B={class:"hint-container tip"},k={class:"hint-container tip"},f={class:"hint-container tip"},A={class:"hint-container tip"},j={class:"hint-container tip"},D={class:"hint-container tip"},x={class:"hint-container tip"},y={class:"hint-container tip"};function q(F,s){const t=r("RouteLink");return o(),p("div",null,[s[117]||(s[117]=e("h1",{id:"核心命令",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#核心命令"},[e("span",null,"核心命令")])],-1)),s[118]||(s[118]=e("p",null,[n("核心命令包含 "),e("strong",null,"项目/组件库初始化、发布、回滚生产版本、复用代码"),n(" 等一系列功能。")],-1)),e("p",null,[s[1]||(s[1]=n("使用前你需要先安装脚手架，如果你还没有安装，请查看 ")),l(t,{to:"/guide/getting-started.html"},{default:i(()=>s[0]||(s[0]=[n("快速上手")])),_:1}),s[2]||(s[2]=n(" 。"))]),e("p",null,[s[4]||(s[4]=n("关于核心命令的架构，请查看 ")),l(t,{to:"/framework/commands.html"},{default:i(()=>s[3]||(s[3]=[n("命令模块架构")])),_:1}),s[5]||(s[5]=n(" 说明。"))]),s[119]||(s[119]=e("h2",{id:"初始化-init命令",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#初始化-init命令"},[e("span",null,"初始化 - init命令")])],-1)),s[120]||(s[120]=e("p",null,"初始化项目或组件库，通过npm安装项目或组件库模板。支持标准项目模板创建、自定义项目模板创建、组件库模板创建、模板自动安装和启动等配置。",-1)),e("div",c,[s[9]||(s[9]=e("p",{class:"hint-container-title"},"提示",-1)),e("p",null,[s[7]||(s[7]=n("关于各种模板的说明以及如何创建，请查看 ")),l(t,{to:"/guide/template.html"},{default:i(()=>s[6]||(s[6]=[n("模板")])),_:1}),s[8]||(s[8]=n(" 文档。"))])]),e("div",h,[s[15]||(s[15]=e("p",{class:"hint-container-title"},"提示",-1)),e("p",null,[s[11]||(s[11]=n("为了串联前后端整体学习，我使用了 ")),s[12]||(s[12]=e("code",null,"MongoDB",-1)),s[13]||(s[13]=n(" 来配置模板数据，请查看 ")),l(t,{to:"/guide/configuration.html#mongodb%E9%85%8D%E7%BD%AE%E6%A8%A1%E6%9D%BF"},{default:i(()=>s[10]||(s[10]=[n("MongoDB配置模板")])),_:1}),s[14]||(s[14]=n(" 说明。"))])]),e("div",E,[s[19]||(s[19]=e("p",{class:"hint-container-title"},"提示",-1)),e("p",null,[s[17]||(s[17]=n("为了方便使用，我新增了对本地配置的支持，需要在脚手架缓存目录中创建JSON文件配置，请查看 ")),l(t,{to:"/guide/configuration.html#%E9%A1%B9%E7%9B%AE-%E7%BB%84%E4%BB%B6%E5%BA%93%E6%A8%A1%E6%9D%BF%E9%85%8D%E7%BD%AE"},{default:i(()=>s[16]||(s[16]=[n("本地JSON配置模板")])),_:1}),s[18]||(s[18]=n(" 说明。"))])]),e("div",B,[s[26]||(s[26]=e("p",{class:"hint-container-title"},"提示",-1)),e("p",null,[s[21]||(s[21]=n("如果你还不熟悉脚手架的使用范式，请查看 ")),l(t,{to:"/guide/getting-started.html#%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E8%8C%83%E5%BC%8F"},{default:i(()=>s[20]||(s[20]=[n("快速上手")])),_:1}),s[22]||(s[22]=n(" 说明。"))]),e("p",null,[s[24]||(s[24]=n("如果你想查看当前命令支持什么参数，请查看 ")),l(t,{to:"/guide/getting-started.html#%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E5%B8%AE%E5%8A%A9"},{default:i(()=>s[23]||(s[23]=[n("命令使用帮助")])),_:1}),s[25]||(s[25]=n("。"))])]),s[121]||(s[121]=a(`<h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h3><p>你可以按照以下方式使用</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">cjp-cli-dev init <span class="token punctuation">[</span>projectName<span class="token punctuation">]</span></span>
<span class="line"><span class="token comment"># 或者你不输入项目名称也可以，直接执行命令，执行过程中会提示你输入项目名称，如：</span></span>
<span class="line">cjp-cli-dev init</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>init</code> 命令支持以下参数</p><table><thead><tr><th>参数名</th><th>参数说明</th><th>默认值</th></tr></thead><tbody><tr><td>--registry</td><td>指定 <code>npm</code> 下载源</td><td>系统当前源</td></tr><tr><td>--force</td><td>强制初始化，清空当前目录并安装新的模板</td><td>false</td></tr></tbody></table><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h3>`,6)),e("p",null,[s[28]||(s[28]=n("你现在想创建一个项目 ")),s[29]||(s[29]=e("code",null,"test-project",-1)),s[30]||(s[30]=n(" ，需要先创建一个 ")),s[31]||(s[31]=e("code",null,"test-project",-1)),s[32]||(s[32]=n(" 文件夹 ，进入该文件夹，执行以下命令，选择你想要安装的项目模板，当然，这需要你先配置好模板数据，查看 ")),l(t,{to:"/guide/configuration.html"},{default:i(()=>s[27]||(s[27]=[n("模板如何配置")])),_:1}),s[33]||(s[33]=n("。"))]),s[122]||(s[122]=a(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">cjp-cli-dev init test-project</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>由于你太菜了，一不小心把代码搞坏了，于是你希望重新安装模板再来过，暗暗发誓这次一定要成功，但你又不想手动删除项目里的文件。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">cjp-cli-dev init test-project <span class="token parameter variable">--force</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>此时你发现安装速度非常慢，一气之下想换个速度快的下载源。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">cjp-cli-dev init test-project <span class="token parameter variable">--force</span> <span class="token parameter variable">--registry</span> https://registry.npmmirror.com/</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="动画演示" tabindex="-1"><a class="header-anchor" href="#动画演示"><span>动画演示</span></a></h3><p>做个动画给你看看，只要你闭上眼就很难发现作者只演示了一小部分。</p><p><img src="`+u+'" alt="init命令演示动画"></p><h3 id="关于" tabindex="-1"><a class="header-anchor" href="#关于"><span>关于</span></a></h3><p>讲点正经的，职业生涯中总会接触一些优秀项目，一直没有一个好的方式来整合和管理，需要使用的时候只能去找历史备份，然后手动改，特别麻烦。</p><p>眼馋 <a href="https://cli.vuejs.org/zh/guide/" target="_blank" rel="noopener noreferrer">vue-cli</a> 安装vue项目模板的能力，想借此机会实现一个自己的 <code>init</code> 命令，把自己在工作中经历和接触过的比较好的项目提炼出来发布到 npm，未来在任何地方都能通过脚手架命令实现快速复用。</p><p>模板怎么创建？请点击以下链接查看教程。</p>',12)),e("ul",null,[e("li",null,[l(t,{to:"/guide/template.html#%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE%E6%A8%A1%E6%9D%BF"},{default:i(()=>s[34]||(s[34]=[n("如何创建项目模板")])),_:1})]),e("li",null,[l(t,{to:"/guide/template.html#%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E7%BB%84%E4%BB%B6%E5%BA%93%E6%A8%A1%E6%9D%BF"},{default:i(()=>s[35]||(s[35]=[n("如何创建组件库模板")])),_:1})])]),s[123]||(s[123]=e("h3",{id:"安装组件库说明",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#安装组件库说明"},[e("span",null,"安装组件库说明")])],-1)),e("p",null,[s[37]||(s[37]=e("code",null,"init",-1)),s[38]||(s[38]=n(" 命令安装类型为 ")),s[39]||(s[39]=e("code",null,"组件",-1)),s[40]||(s[40]=n(" 时，会在源码根目录中额外生成一个 ")),s[41]||(s[41]=e("code",null,".componentrc",-1)),s[42]||(s[42]=n(" 文件，该文件中记录了 ")),l(t,{to:"/guide/configuration.html#%E9%A1%B9%E7%9B%AE-%E7%BB%84%E4%BB%B6%E5%BA%93%E6%A8%A1%E6%9D%BF%E5%AD%97%E6%AE%B5%E8%AF%B4%E6%98%8E"},{default:i(()=>s[36]||(s[36]=[n("组件库模板")])),_:1}),s[43]||(s[43]=n(" 来源的相关信息，该文件将作为 ")),s[44]||(s[44]=e("code",null,"publish",-1)),s[45]||(s[45]=n(" 命令发布 ")),s[46]||(s[46]=e("code",null,"项目",-1)),s[47]||(s[47]=n(" 还是 ")),s[48]||(s[48]=e("code",null,"组件",-1)),s[49]||(s[49]=n(" 的判断依据，不同类型会走不同的发布逻辑分支，文件内容示例如下："))]),s[124]||(s[124]=a(`<div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;component&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;projectName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;@cjp-cli-dev/test-components&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;projectVersion&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;projectTemplate&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cjp-cli-dev-template-vue3-component&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;componentDescription&quot;</span><span class="token operator">:</span> <span class="token string">&quot;组件库通用模板&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;buildPath&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dist&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;examplePath&quot;</span><span class="token operator">:</span> <span class="token string">&quot;examples&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;npmName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cjp-cli-dev-template-vue3-component&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="发布-publish命令" tabindex="-1"><a class="header-anchor" href="#发布-publish命令"><span>发布 - publish命令</span></a></h2><p>发布项目或组件库，包括<strong>测试发布和正式发布</strong> 、支持自动在 <code>github</code> 、<code>gitee</code> 创建远程仓库和提交代码、<code>Git Flow</code> 自动化处理。 支持<strong>项目云构建、云发布</strong>，采用 <code>Redis</code> 管理云构建任务数据，发布完成自动清除 <code>Redis</code> 缓存，静态资源自动上传 <code>阿里OSS</code>、自动同步代码和创建版本tag，支持 <code>MySQL</code> 管理发布组件信息。</p>`,3)),e("div",k,[s[62]||(s[62]=e("p",{class:"hint-container-title"},"提示",-1)),e("p",null,[s[51]||(s[51]=n("为了串联前后端整体学习，我使用了 ")),s[52]||(s[52]=e("code",null,"Redis",-1)),s[53]||(s[53]=n("、")),s[54]||(s[54]=e("code",null,"MySQL",-1)),s[55]||(s[55]=n(" 以及 ")),s[56]||(s[56]=e("code",null,"OSS静态资源托管",-1)),s[57]||(s[57]=n("，这些都需要依赖服务端应用，请查看 ")),l(t,{to:"/guide/configuration.html#%E5%90%AF%E5%8A%A8%E6%9C%8D%E5%8A%A1%E7%AB%AF"},{default:i(()=>s[50]||(s[50]=[n("启动服务端")])),_:1}),s[58]||(s[58]=n(" 说明。"))]),s[63]||(s[63]=e("p",null,[n("如果你想体验 "),e("code",null,"云构建"),n("、"),e("code",null,"云发布"),n(" 功能，请先安装并配置好 "),e("code",null,"Redis"),n("、"),e("code",null,"OSS"),n("、"),e("code",null,"MySQL"),n(" ，点击以下链接查看详细操作教程。")],-1)),e("ul",null,[e("li",null,[l(t,{to:"/guide/configuration.html#redis%E9%85%8D%E7%BD%AE"},{default:i(()=>s[59]||(s[59]=[n("如何安装和配置 Redis")])),_:1})]),e("li",null,[l(t,{to:"/guide/configuration.html#mysql%E9%85%8D%E7%BD%AE"},{default:i(()=>s[60]||(s[60]=[n("如何安装和配置 MySQL")])),_:1})]),e("li",null,[l(t,{to:"/guide/configuration.html#oss%E9%85%8D%E7%BD%AE"},{default:i(()=>s[61]||(s[61]=[n("如何配置 OSS")])),_:1})])])]),s[125]||(s[125]=a('<div class="hint-container tip"><p class="hint-container-title">提示</p><p>为了方便使用，我新增了 <code>--noCloudBuild</code> 参数，针对项目类型，指定该参数时会关闭云构建和云发布，你可以手动上传构建结果到OSS或自己的静态资源服务器。</p><p>针对组件库类型，也新增了 <code>--componentNoDb</code> 参数，指定该参数可以关闭将组件信息写入 <code>MySQL</code> 操作。</p><p>如果你还不怎么了解服务端知识，在执行发布命令时针对不同类型项目添加以上参数，能够让你快速体验脚手架功能。</p></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>由于目前我没有域名和服务器，<code>OSS</code> 上无法配置域名解析直接进行页面访问，你可以按照自己的需求修改服务端代码以适配自己的需求，当然，这需要你对服务端有一定了解。</p><p>我也会补充一些相关教程，敬请期待。</p></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p><code>publish</code> 命令执行时，将读取源码根目录中的 <code>.componentrc</code> 文件，如果存在该文件，则认为这是一个组件库，并执行组件库发布流程，反之则发布项目。查看 <a href="#%E5%AE%89%E8%A3%85%E7%BB%84%E4%BB%B6%E5%BA%93%E8%AF%B4%E6%98%8E">安装组件库说明</a> 。</p></div>',3)),e("div",f,[s[70]||(s[70]=e("p",{class:"hint-container-title"},"提示",-1)),e("p",null,[s[65]||(s[65]=n("如果你还不熟悉脚手架的使用范式，请查看 ")),l(t,{to:"/guide/getting-started.html#%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E8%8C%83%E5%BC%8F"},{default:i(()=>s[64]||(s[64]=[n("快速上手")])),_:1}),s[66]||(s[66]=n(" 说明。"))]),e("p",null,[s[68]||(s[68]=n("如果你想查看当前命令支持什么参数，请查看 ")),l(t,{to:"/guide/getting-started.html#%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E5%B8%AE%E5%8A%A9"},{default:i(()=>s[67]||(s[67]=[n("命令使用帮助")])),_:1}),s[69]||(s[69]=n("。"))])]),s[126]||(s[126]=a(`<h3 id="使用-1" tabindex="-1"><a class="header-anchor" href="#使用-1"><span>使用</span></a></h3><p>你可以按照以下方式使用</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">cjp-cli-dev publish</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>publish</code> 命令支持以下参数</p><table><thead><tr><th>参数名</th><th>参数说明</th><th>默认值</th></tr></thead><tbody><tr><td>--refreshGitServer</td><td>更新Git托管平台</td><td>false</td></tr><tr><td>--refreshGitToken</td><td>更新Git托管平台token</td><td>false</td></tr><tr><td>--refreshGitOwner</td><td>更新Git仓库登录类型</td><td>false</td></tr><tr><td>--production</td><td>是否正式发布</td><td>false</td></tr><tr><td>--buildCmd</td><td>指定自定义构建命令</td><td>&quot;npm run build&quot;</td></tr><tr><td>--registry</td><td>指定 <code>npm</code> 下载源</td><td>系统当前源</td></tr><tr><td>--noCloudBuild</td><td>发布项目不开启云构建</td><td>false</td></tr><tr><td>--componentNoDb</td><td>发布组件库信息不写入数据库</td><td>false</td></tr><tr><td>--sshUser</td><td>指定模板服务器用户名</td><td>无</td></tr><tr><td>--sshIp</td><td>指定模板服务器IP或域名</td><td>无</td></tr><tr><td>--sshPath</td><td>指定模板服务器上传路径</td><td>无</td></tr></tbody></table><h3 id="示例-1" tabindex="-1"><a class="header-anchor" href="#示例-1"><span>示例</span></a></h3><p>刚才你通过 <code>init</code> 命令创建了 <code>test-project</code> 项目，你很懒，不想手动打开浏览器输入全球最大的同性交友网站 <code>Github</code> 地址，还要再苦逼的创建仓库然后给 <code>test-project</code> 设置远程地址再推送代码巴拉巴拉，这时候你还发现登录状态过期了，还要你输入账密加验证进行登录，于是火大的你给自己创建了一个过期时间老久老久的 <a href="https://github.com/settings/tokens" target="_blank" rel="noopener noreferrer">access_token</a>，以后再也不想体验手动这么麻烦的事情了，你突然想到了好像有个功能不完善的渣渣命令刚好能满足你当下想偷懒的想法，只需要输入一行命令，什么智能提醒、智能检查、自动提交、版本管理通通一网打尽，简直不要太爽。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">cjp-cli-dev publish</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>你有点花心，不满足于创建个人仓库自己一个人单排，还想创建小组织拉点人深夜一起去小房间讨论技术。于是你在全球最大的同性交友网站上创建了一个交友组织，并切换身份发布了一个群聊。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">cjp-cli-dev publish <span class="token parameter variable">--refreshGitOwner</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>某天你心血来潮，想去祸害一下国区码云 <code>Gitee</code>，于是你又去码云给自己创建了一个过期时间老久老久的 <a href="https://gitee.com/personal_access_tokens" target="_blank" rel="noopener noreferrer">access_token</a>，但却不知道要怎么切换托管平台，心里很不爽，没想到的是作者预判了你的预判。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">cjp-cli-dev publish <span class="token parameter variable">--refreshGitServer</span> <span class="token parameter variable">--refreshGitToken</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>由于你以前没有同性交友的经验，经过长期在小群里面锻炼，你现在胆子大了，想把交友信息正式发布到交友大群里。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">cjp-cli-dev publish <span class="token parameter variable">--production</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在你发布交友信息时你发现提供模板那傻逼给的打包命令不对，于是你还得自己动手丰衣足食。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">cjp-cli-dev publish <span class="token parameter variable">--buildCmd</span> <span class="token string">&quot;npm run build:prod&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在你好不容易解决了所有问题后，发送交友信息终于成功了，但你发现发送信息很慢，这你忍不了，于是给它打了点鸡血让它加速发送。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">cjp-cli-dev publish <span class="token parameter variable">--registry</span> https://registry.npmmirror.com/</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>你发布了一条交友信息，并把标题伪装成【项目发布】，结果发现作者那傻逼搞了什么云构建啥啥的导致发布失败了，你也搞不懂但你知道搞起来贼麻烦，于是你花了点小钱强迫作者开了后门。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">cjp-cli-dev publish <span class="token parameter variable">--noCloudBuild</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>你上次交友非常成功，感叹有钱真好的同时又发布了一条交友信息，并把标题伪装成【组件发布】，又发现作者那傻逼搞了什么 <code>MySQL</code> 管理组件发布信息，导致发布再次失败了，于是你再次感叹了有钱真好。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">cjp-cli-dev publish <span class="token parameter variable">--componentNoDb</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>由于最近频繁交友导致开销有点大，手头紧，这次你不想和作者玩了，你想把发布的交友信息备份到自己的电脑里，下次交新朋友可以直接拿来撒网。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">cjp-cli-dev publish <span class="token parameter variable">--sshUser</span> root <span class="token parameter variable">--sshIp</span> 1xx.xx.xx.xx:8888 <span class="token parameter variable">--sshPath</span> /data/apps</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="动画演示-1" tabindex="-1"><a class="header-anchor" href="#动画演示-1"><span>动画演示</span></a></h3><p>做个动画给你看看，只要你闭上眼就很难发现作者只演示了一小部分。</p><p><img src="`+m+'" alt="publish命令演示动画"></p><h3 id="关于-1" tabindex="-1"><a class="header-anchor" href="#关于-1"><span>关于</span></a></h3><p>讲点正经的，<code>publish</code> 命令目前还在开发阶段，这里面涉及到很多复杂的实现，每个公司的规范和流程都有所区别，该命令还有很多不完善的地方，但这是一个很好的实现思路，按照这个思路你可以复刻出属于自己公司的标准自动化发布工具。</p><h2 id="回滚-rollback命令" tabindex="-1"><a class="header-anchor" href="#回滚-rollback命令"><span>回滚 - rollback命令</span></a></h2><p>回滚生产版本，支持回滚master分支到指定release tag，自动本地构建回滚版本。</p>',31)),e("div",A,[s[77]||(s[77]=e("p",{class:"hint-container-title"},"提示",-1)),e("p",null,[s[72]||(s[72]=n("如果你还不熟悉脚手架的使用范式，请查看 ")),l(t,{to:"/guide/getting-started.html#%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E8%8C%83%E5%BC%8F"},{default:i(()=>s[71]||(s[71]=[n("快速上手")])),_:1}),s[73]||(s[73]=n(" 说明。"))]),e("p",null,[s[75]||(s[75]=n("如果你想查看当前命令支持什么参数，请查看 ")),l(t,{to:"/guide/getting-started.html#%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E5%B8%AE%E5%8A%A9"},{default:i(()=>s[74]||(s[74]=[n("命令使用帮助")])),_:1}),s[76]||(s[76]=n("。"))])]),s[127]||(s[127]=a(`<h3 id="使用-2" tabindex="-1"><a class="header-anchor" href="#使用-2"><span>使用</span></a></h3><p>你可以按照以下方式使用</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">cjp-cli-dev rollback</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>rollback</code> 命令支持以下参数</p><table><thead><tr><th>参数名</th><th>参数说明</th><th>默认值</th></tr></thead><tbody><tr><td>--buildCmd</td><td>指定自定义构建命令</td><td>&quot;npm run build&quot;</td></tr></tbody></table><h3 id="示例-2" tabindex="-1"><a class="header-anchor" href="#示例-2"><span>示例</span></a></h3><p>前面你通过 <code>publish</code> 命令发布了项目 <code>test-project</code> 到生产环境，出了bug被老板屌了，老板说限你十分钟内把问题处理好，但这个bug你评估下来十个小时也不一定能修好，于是只好先回滚。你回滚到上一个版本后发现还有问题，于是又继续执行命令选择回滚上上个版本。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">cjp-cli-dev rollback</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>你发现项目的构建命令不是 <code>npm run build</code>，于是你重新指定构建命令</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">cjp-cli-dev rollback <span class="token parameter variable">--buildCmd</span> <span class="token string">&quot;npm run build:prod&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="动画演示-2" tabindex="-1"><a class="header-anchor" href="#动画演示-2"><span>动画演示</span></a></h3><p>做个动画给你看看，这次基本演示完整了。</p><p><img src="`+v+'" alt="rollback命令演示动画"></p><h3 id="关于-2" tabindex="-1"><a class="header-anchor" href="#关于-2"><span>关于</span></a></h3><p><code>rollback</code> 命令目前也还在开发阶段并不完善，但它实现了快速回滚 <code>master</code> 分支代码，并将回滚前的 <code>master</code> 分支代码自动备份到如 <code>backup/master/rollback-release/1.0.0</code> 分支的能力，同时自动构建回滚后的版本，你可以自行决定部署方式。</p><p>你可能注意到 <code>release/1.0.0</code> 这个标签，这意味着版本需要严格按照范式来进行发布管理，回滚命令的能力也强依赖于标准的 <code>Git Tag</code> 管理，推荐统一使用 <code>publish</code> 命令进行发布，因为它内部集成了自动版本管理功能。</p><p>为什么回滚后不自动发布和部署？</p><p>一是因为作者懒，二是因为还有一些通用能力的东西没想清楚。你可以借鉴它来复刻自己的自动回滚流程。</p><p>手动发布的考虑因素：</p><ul><li>安全性：考虑回滚操作可能带来的安全风险。例如，如果回滚到包含已知安全漏洞的版本，则不应自动发布。</li><li>谨慎性：手动发布允许你在发布前进行更多的检查和确认，从而确保发布的代码是稳定和安全的。</li><li>灵活性：手动发布提供了更大的灵活性，可以根据需要选择是否发布、何时发布以及发布到哪个环境。</li><li>团队协作：手动发布可以确保团队成员之间的沟通和协作，从而避免意外的发布或覆盖其他人的工作。</li></ul><h2 id="复用代码-add命令" tabindex="-1"><a class="header-anchor" href="#复用代码-add命令"><span>复用代码 - add命令</span></a></h2><p>添加组件代码片段模板、标准页面模板、自定义页面模板到本地项目。支持自动写入组件到指定代码位置，自动导入并注册局部组件，自动合并项目依赖。</p>',22)),e("div",j,[s[81]||(s[81]=e("p",{class:"hint-container-title"},"提示",-1)),e("p",null,[s[79]||(s[79]=n("关于各种模板的说明以及如何创建，请查看 ")),l(t,{to:"/guide/template.html"},{default:i(()=>s[78]||(s[78]=[n("模板")])),_:1}),s[80]||(s[80]=n(" 文档。"))]),s[82]||(s[82]=e("p",null,[e("strong",null,"请注意：目前仅支持vue项目")],-1))]),e("div",D,[s[88]||(s[88]=e("p",{class:"hint-container-title"},"提示",-1)),e("p",null,[s[84]||(s[84]=n("为了串联前后端整体学习，我使用了 ")),s[85]||(s[85]=e("code",null,"MongoDB",-1)),s[86]||(s[86]=n(" 来配置模板数据，请查看 ")),l(t,{to:"/guide/configuration.html#mongodb%E9%85%8D%E7%BD%AE%E6%A8%A1%E6%9D%BF"},{default:i(()=>s[83]||(s[83]=[n("MongoDB配置模板")])),_:1}),s[87]||(s[87]=n(" 说明。"))])]),e("div",x,[s[95]||(s[95]=e("p",{class:"hint-container-title"},"提示",-1)),s[96]||(s[96]=e("p",null,"为了方便使用，我新增了对本地配置的支持，需要在脚手架缓存目录中创建JSON文件配置。",-1)),e("p",null,[s[90]||(s[90]=n("页面模板类型请查看 ")),l(t,{to:"/guide/configuration.html#%E9%A1%B5%E9%9D%A2%E6%A8%A1%E6%9D%BF%E9%85%8D%E7%BD%AE"},{default:i(()=>s[89]||(s[89]=[n("页面模板配置")])),_:1}),s[91]||(s[91]=n(" 说明。"))]),e("p",null,[s[93]||(s[93]=n("组件模板类型请查看 ")),l(t,{to:"/guide/configuration.html#%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5%E6%A8%A1%E6%9D%BF%E9%85%8D%E7%BD%AE"},{default:i(()=>s[92]||(s[92]=[n("代码片段模板配置")])),_:1}),s[94]||(s[94]=n(" 说明。"))])]),e("div",y,[s[103]||(s[103]=e("p",{class:"hint-container-title"},"提示",-1)),e("p",null,[s[98]||(s[98]=n("如果你还不熟悉脚手架的使用范式，请查看 ")),l(t,{to:"/guide/getting-started.html#%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E8%8C%83%E5%BC%8F"},{default:i(()=>s[97]||(s[97]=[n("快速上手")])),_:1}),s[99]||(s[99]=n(" 说明。"))]),e("p",null,[s[101]||(s[101]=n("如果你想查看当前命令支持什么参数，请查看 ")),l(t,{to:"/guide/getting-started.html#%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E5%B8%AE%E5%8A%A9"},{default:i(()=>s[100]||(s[100]=[n("命令使用帮助")])),_:1}),s[102]||(s[102]=n("。"))])]),s[128]||(s[128]=a(`<h3 id="使用-3" tabindex="-1"><a class="header-anchor" href="#使用-3"><span>使用</span></a></h3><p>你可以按照以下方式使用</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">cjp-cli-dev <span class="token function">add</span> <span class="token punctuation">[</span>templateName<span class="token punctuation">]</span></span>
<span class="line"><span class="token comment"># 或者你不输入项目名称也可以，直接执行命令，执行过程中会提示你输入项目名称，如：</span></span>
<span class="line">cjp-cli-dev <span class="token function">add</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>init</code> 命令支持以下参数</p><table><thead><tr><th>参数名</th><th>参数说明</th><th>默认值</th></tr></thead><tbody><tr><td>--registry</td><td>指定 <code>npm</code> 下载源</td><td>系统当前源</td></tr></tbody></table><h3 id="示例-3" tabindex="-1"><a class="header-anchor" href="#示例-3"><span>示例</span></a></h3>`,6)),e("p",null,[s[105]||(s[105]=n("前面你通过 ")),s[106]||(s[106]=e("code",null,"init",-1)),s[107]||(s[107]=n(" 命令创建了一个项目 ")),s[108]||(s[108]=e("code",null,"test-project",-1)),s[109]||(s[109]=n(" ，假设你是个大牛，在 ")),s[110]||(s[110]=e("code",null,"npm",-1)),s[111]||(s[111]=n(" 上发布了很多个组件或页面模板，你可以执行以下命令，选择你想要复用的页面或组件模板，脚手架会自动将模板依赖和 ")),s[112]||(s[112]=e("code",null,"test-project",-1)),s[113]||(s[113]=n(" 项目依赖进行合并处理。当然，这需要你先配置好模板数据，查看 ")),l(t,{to:"/guide/configuration.html#%E9%A1%B5%E9%9D%A2%E6%A8%A1%E6%9D%BF%E9%85%8D%E7%BD%AE"},{default:i(()=>s[104]||(s[104]=[n("模板如何配置")])),_:1}),s[114]||(s[114]=n("。"))]),s[129]||(s[129]=a(`<ul><li>复用组件</li></ul><p>你需要先进入对应的 .vue 入口文件目录中，比如你想把 <code>TestComponent</code> 安装写入到 <code>src/views/HomeView.vue</code> 的第7行，执行以下命令，并按照指引进行选择或输入即可。目前自动局部注册组件功能支持 <code>vue2 标准选项式风格</code>、<code>vue3 标准组合式风格</code>、<code>vue3 &lt;script setup&gt;风格</code>。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">cd</span> src/views/</span>
<span class="line">cjp-cli-dev <span class="token function">add</span> TestComponent</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>使用 <code>add</code> 命令复用 <code>页面模板</code> 和 <code>组件代码片段</code> 行为有所区别，复用 <code>页面模板</code> 时直接就在命令当前运行目录下安装 <code>页面模板</code>，而 <code>组件代码片段</code> 则会先在命令当前运行目录下检查 <code>components</code> 文件夹，没有则创建该文件夹，并在 <code>components</code> 文件夹中安装 <code>组件代码片段模板</code> 。</p></div><ul><li>复用页面</li></ul><p>你需要先进入对应的页面管理目录中，比如你想把 <code>test-page</code> 安装写入到 <code>src/views</code> 目录下，执行以下命令，并按照指引进行选择或输入即可。与复用组件不同的是，页面需要你动下手自己配置路由，因为每个项目的路由配置方式可能存在很大差异，想实现通用是非常难的。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">cd</span> src/views/</span>
<span class="line">cjp-cli-dev <span class="token function">add</span> test-page</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>你发现安装速度非常慢，一气之下想换个速度快的下载源。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">cjp-cli-dev <span class="token function">add</span> test-page <span class="token parameter variable">--registry</span> https://registry.npmmirror.com/</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="动画演示-3" tabindex="-1"><a class="header-anchor" href="#动画演示-3"><span>动画演示</span></a></h3><p>做个动画给你看看，只要你闭上眼就很难发现作者只演示了一小部分。</p><p><img src="`+b+'" alt="add命令演示动画"></p><h3 id="关于-3" tabindex="-1"><a class="header-anchor" href="#关于-3"><span>关于</span></a></h3><p>在做项目的时候当你发现有一些页面或者组件大量使用到时，常规做法是手动把它们拷过来，会比较麻烦而且效率不高，经常容易漏拷贝导致浪费很多时间，不妨把他们单独抽离成模板发布到 <code>npm</code> 进行管理，通过脚手架命令来实现快速复用。</p><p>模板怎么创建？请点击以下链接查看教程。</p>',15)),e("ul",null,[e("li",null,[l(t,{to:"/guide/template.html#%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E9%A1%B5%E9%9D%A2%E6%A8%A1%E6%9D%BF"},{default:i(()=>s[115]||(s[115]=[n("如何创建页面模板")])),_:1})]),e("li",null,[l(t,{to:"/guide/template.html#%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5%E6%A8%A1%E6%9D%BF"},{default:i(()=>s[116]||(s[116]=[n("如何创建代码片段模板")])),_:1})])]),s[130]||(s[130]=e("blockquote",null,[e("p",null,"PS：感谢Bug探测器-我敏姐测出不少Bug，给了我好好改造重新做人的机会，使得脚手架更加完美。")],-1))])}const C=d(g,[["render",q],["__file","core-command.html.vue"]]),N=JSON.parse('{"path":"/guide/core-command.html","title":"核心命令","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"初始化 - init命令","slug":"初始化-init命令","link":"#初始化-init命令","children":[{"level":3,"title":"使用","slug":"使用","link":"#使用","children":[]},{"level":3,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":3,"title":"动画演示","slug":"动画演示","link":"#动画演示","children":[]},{"level":3,"title":"关于","slug":"关于","link":"#关于","children":[]},{"level":3,"title":"安装组件库说明","slug":"安装组件库说明","link":"#安装组件库说明","children":[]}]},{"level":2,"title":"发布 - publish命令","slug":"发布-publish命令","link":"#发布-publish命令","children":[{"level":3,"title":"使用","slug":"使用-1","link":"#使用-1","children":[]},{"level":3,"title":"示例","slug":"示例-1","link":"#示例-1","children":[]},{"level":3,"title":"动画演示","slug":"动画演示-1","link":"#动画演示-1","children":[]},{"level":3,"title":"关于","slug":"关于-1","link":"#关于-1","children":[]}]},{"level":2,"title":"回滚 - rollback命令","slug":"回滚-rollback命令","link":"#回滚-rollback命令","children":[{"level":3,"title":"使用","slug":"使用-2","link":"#使用-2","children":[]},{"level":3,"title":"示例","slug":"示例-2","link":"#示例-2","children":[]},{"level":3,"title":"动画演示","slug":"动画演示-2","link":"#动画演示-2","children":[]},{"level":3,"title":"关于","slug":"关于-2","link":"#关于-2","children":[]}]},{"level":2,"title":"复用代码 - add命令","slug":"复用代码-add命令","link":"#复用代码-add命令","children":[{"level":3,"title":"使用","slug":"使用-3","link":"#使用-3","children":[]},{"level":3,"title":"示例","slug":"示例-3","link":"#示例-3","children":[]},{"level":3,"title":"动画演示","slug":"动画演示-3","link":"#动画演示-3","children":[]},{"level":3,"title":"关于","slug":"关于-3","link":"#关于-3","children":[]}]}],"git":{"updatedTime":1732620882000,"contributors":[{"name":"v_jpch","email":"v_jpch.digitalgd.com","commits":10,"url":"https://github.com/v_jpch"}]},"filePathRelative":"guide/core-command.md"}');export{C as comp,N as data};
