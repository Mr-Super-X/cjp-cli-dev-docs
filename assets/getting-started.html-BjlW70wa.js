import{_ as r,c as d,a as t,b as a,e as l,f as i,d as n,r as p,o}from"./app-DXiP8jJS.js";const c={},m={class:"hint-container tip"};function u(h,e){const s=p("RouteLink");return o(),d("div",null,[e[15]||(e[15]=t(`<h1 id="快速上手" tabindex="-1"><a class="header-anchor" href="#快速上手"><span>快速上手</span></a></h1><h2 id="依赖环境" tabindex="-1"><a class="header-anchor" href="#依赖环境"><span>依赖环境</span></a></h2><ul><li><a href="https://nodejs.org/zh-cn" target="_blank" rel="noopener noreferrer">Node.js v16+</a></li><li><a href="https://nodejs.org/dist/" target="_blank" rel="noopener noreferrer">Node.js 历史版本下载</a></li></ul><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><ul><li>全局安装脚手架核心包</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">npm</span> i <span class="token parameter variable">-g</span> @cjp-cli-dev/core</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><h3 id="操作系统说明" tabindex="-1"><a class="header-anchor" href="#操作系统说明"><span>操作系统说明</span></a></h3><p>Windows系统推荐使用 <a href="https://cmder.app/" target="_blank" rel="noopener noreferrer">cmder</a> 来运行脚手架，可以减少很多奇怪的报错现象。MacOS请随意。</p><p>这里有一份<a href="https://blog.csdn.net/weixin_44205779/article/details/114657837" target="_blank" rel="noopener noreferrer">cmder配置参考教程</a></p><h3 id="命令使用范式" tabindex="-1"><a class="header-anchor" href="#命令使用范式"><span>命令使用范式</span></a></h3><p>所有命令都通过 <code>脚手架 + 命令 + 可选参数</code> 调用，查看 <a href="https://github.com/tj/commander.js/blob/HEAD/Readme_zh-CN.md" target="_blank" rel="noopener noreferrer">commander</a> 文档。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">cjp-cli-dev <span class="token operator">&lt;</span>command<span class="token operator">&gt;</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>在 <code>commander</code> 制定的范式中 <code>&lt;&gt;</code> 表示必传，<code>[]</code> 表示可选，其它类似的库大多也是这个标准。</p></div><h3 id="命令使用帮助" tabindex="-1"><a class="header-anchor" href="#命令使用帮助"><span>命令使用帮助</span></a></h3><p>你可以通过以下方式查看命令使用帮助，脚手架所有命令查看使用帮助的方式都是一致的。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">cjp-cli-dev <span class="token operator">&lt;</span>command<span class="token operator">&gt;</span> <span class="token parameter variable">--help</span></span>
<span class="line"><span class="token comment"># or</span></span>
<span class="line">cjp-cli-dev <span class="token operator">&lt;</span>command<span class="token operator">&gt;</span> <span class="token parameter variable">-h</span></span>
<span class="line"><span class="token comment"># 示例</span></span>
<span class="line">cjp-cli-dev codelint <span class="token parameter variable">--help</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="命令debug调试" tabindex="-1"><a class="header-anchor" href="#命令debug调试"><span>命令debug调试</span></a></h3><p>脚手架所有命令都支持debug调试，只需要在命令后指定 <code>--debug</code> 参数即可，调试模式下拥有更加详细的调试输出内容以及报错时的执行栈打印。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">cjp-cli-dev <span class="token operator">&lt;</span>command<span class="token operator">&gt;</span> <span class="token parameter variable">--debug</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="脚手架缓存清除" tabindex="-1"><a class="header-anchor" href="#脚手架缓存清除"><span>脚手架缓存清除</span></a></h3><p>脚手架所有缓存都放在 <code>你的用户主目录/.cjp-cli-dev</code> 目录中，并支持 <code>clean</code> 命令清空缓存。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 清空依赖缓存</span></span>
<span class="line">cjp-cli-dev clean <span class="token parameter variable">--dep</span></span>
<span class="line"><span class="token comment"># 清空所有缓存</span></span>
<span class="line">cjp-cli-dev clean <span class="token parameter variable">--all</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="命令使用示例" tabindex="-1"><a class="header-anchor" href="#命令使用示例"><span>命令使用示例</span></a></h3>`,24)),a("div",m,[e[7]||(e[7]=a("p",{class:"hint-container-title"},"提示",-1)),e[8]||(e[8]=a("p",null,"脚手架在架构上对命令类型进行了区分，可分为：",-1)),a("ul",null,[a("li",null,[a("strong",null,[l(s,{to:"/guide/core-command.html"},{default:i(()=>e[0]||(e[0]=[n("核心命令")])),_:1})]),e[1]||(e[1]=n("：包含项目初始化、发布、回滚等核心功能。"))]),a("li",null,[a("strong",null,[l(s,{to:"/guide/more-command.html"},{default:i(()=>e[2]||(e[2]=[n("其他命令")])),_:1})]),e[3]||(e[3]=n("：包含各种锦上添花的前端工程化配置工具或其他好用的工具（我目前想到的）。"))])]),a("p",null,[e[5]||(e[5]=n("核心命令目前需要做一些配置才可以使用，请查阅 ")),l(s,{to:"/guide/core-command.html"},{default:i(()=>e[4]||(e[4]=[n("核心命令")])),_:1}),e[6]||(e[6]=n(" 说明文档，下面仅演示不依赖配置的命令如何使用。"))])]),e[16]||(e[16]=t(`<ul><li><strong>安装统一代码规范：codelint</strong></li></ul><p>假设你当前项目为 <code>vue-project</code> ，进入项目目录，执行安装命令。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">cd</span> vue-project</span>
<span class="line">cjp-cli-dev codelint <span class="token parameter variable">--install</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>接着只需要按照提示进行选择或输入即可将统一代码规范功能安装到项目中。</p><p>命令参数支持简化，如：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">cjp-cli-dev codelint <span class="token parameter variable">-i</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="更多命令使用" tabindex="-1"><a class="header-anchor" href="#更多命令使用"><span>更多命令使用</span></a></h3>`,7)),a("ul",null,[a("li",null,[e[10]||(e[10]=n("查看 ")),a("strong",null,[l(s,{to:"/guide/core-command.html"},{default:i(()=>e[9]||(e[9]=[n("核心命令")])),_:1})]),e[11]||(e[11]=n(" 使用"))]),a("li",null,[e[13]||(e[13]=n("查看 ")),a("strong",null,[l(s,{to:"/guide/more-command.html"},{default:i(()=>e[12]||(e[12]=[n("其他命令")])),_:1})]),e[14]||(e[14]=n(" 使用"))])])])}const g=r(c,[["render",u],["__file","getting-started.html.vue"]]),b=JSON.parse('{"path":"/guide/getting-started.html","title":"快速上手","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"依赖环境","slug":"依赖环境","link":"#依赖环境","children":[]},{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[{"level":3,"title":"操作系统说明","slug":"操作系统说明","link":"#操作系统说明","children":[]},{"level":3,"title":"命令使用范式","slug":"命令使用范式","link":"#命令使用范式","children":[]},{"level":3,"title":"命令使用帮助","slug":"命令使用帮助","link":"#命令使用帮助","children":[]},{"level":3,"title":"命令debug调试","slug":"命令debug调试","link":"#命令debug调试","children":[]},{"level":3,"title":"脚手架缓存清除","slug":"脚手架缓存清除","link":"#脚手架缓存清除","children":[]},{"level":3,"title":"命令使用示例","slug":"命令使用示例","link":"#命令使用示例","children":[]},{"level":3,"title":"更多命令使用","slug":"更多命令使用","link":"#更多命令使用","children":[]}]}],"git":{"updatedTime":1749105338000,"contributors":[{"name":"v_jpch","email":"v_jpch@digitalgd.com.cn","commits":1,"url":"https://github.com/v_jpch"},{"name":"v_jpch","email":"v_jpch.digitalgd.com","commits":7,"url":"https://github.com/v_jpch"}]},"filePathRelative":"guide/getting-started.md"}');export{g as comp,b as data};
