import{_ as l,c,a as e,b as n,d as a,e as p,f as o,r as i,o as d}from"./app-DXiP8jJS.js";const r="/cjp-cli-dev-docs/assets/local-config-ELURZmbu.png",u="/cjp-cli-dev-docs/assets/mongodb-db-rfwb2bnR.jpg",k="/cjp-cli-dev-docs/assets/redis-demo-D4cWz5Da.png",m="/cjp-cli-dev-docs/assets/oss-bucket-create-8TNN_YKf.png",v="/cjp-cli-dev-docs/assets/oss-access-key1-Dj8NNStn.png",b="/cjp-cli-dev-docs/assets/oss-db-qcoGBgt9.png",h="/cjp-cli-dev-docs/assets/docker-engine-BKcxmCT1.jpg",g="/cjp-cli-dev-docs/assets/mysql-dir-D6d0_rQE.png",q="/cjp-cli-dev-docs/assets/docker-mysql-start-c7d-ut1i.jpg",y="/cjp-cli-dev-docs/assets/wsl-ipv4-CgT2MJLU.jpg",E="/cjp-cli-dev-docs/assets/dbeaver-connect-CN5OCBuh.jpg",A="/cjp-cli-dev-docs/assets/cjp-cli-dev-db-CB6BEnMU.jpg",w="/cjp-cli-dev-docs/assets/component-test-table-B-Qo1alL.jpg",S="/cjp-cli-dev-docs/assets/component-test-table2-Dsq544_N.jpg",B="/cjp-cli-dev-docs/assets/start-component-test-table-Brfu2zPp.jpg",f="/cjp-cli-dev-docs/assets/refresh-component-test-table-D0q4Rydt.jpg",N="/cjp-cli-dev-docs/assets/global-env-YrwE691P.png",j={},M={class:"hint-container tip"},L={class:"hint-container tip"},O={class:"hint-container tip"},_={class:"hint-container tip"},C={class:"hint-container tip"};function D(T,s){const t=i("RouteLink");return d(),c("div",null,[s[26]||(s[26]=e('<h1 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h1><div class="hint-container tip"><p class="hint-container-title">提示</p><p>脚手架将使用 <code>npm</code> 来安装模板，因此你需要将模板发布到 <code>npm</code> 或 <code>自建私有npm源</code> 上，修改配置后进行安装，支持指定安装源。</p><p><code>本地 JSON 配置</code> 和 <code>MongoDB 配置</code> 只需选择一项就行，优先读取本地配置。</p><p>目前脚手架 <code>init</code> 、 <code>add</code> 命令支持 <code>本地 JSON 配置</code>。</p><p>如果你想体验 <code>publish</code> 命令的 <code>云构建</code>、<code>云发布</code> 功能，需要先安装和配置 <code>Redis</code>、<code>MySQL</code>。</p><p>查看 <a href="#redis%E9%85%8D%E7%BD%AE">如何安装和配置 Redis</a></p><p>查看 <a href="#mysql%E9%85%8D%E7%BD%AE">如何安装和配置 MySQL</a></p></div><p>作为一款通用脚手架，你可以按团队要求定制自己的模板来快速复用。</p>',3)),n("p",null,[s[1]||(s[1]=a("模板如何创建？请查看 ")),p(t,{to:"/guide/template.html"},{default:o(()=>s[0]||(s[0]=[a("模板创建")])),_:1}),s[2]||(s[2]=a(" 说明。"))]),s[27]||(s[27]=e('<p>自建私有npm源推荐使用 <a href="https://www.npmjs.com/package/verdaccio" target="_blank" rel="noopener noreferrer">verdaccio</a>，你可以搜索相关教程。</p><h2 id="本地json配置模板" tabindex="-1"><a class="header-anchor" href="#本地json配置模板"><span>本地JSON配置模板</span></a></h2><p>以Windows示例，本地JSON配置目录在 <code>C:/用户主目录/.cjp-cli-dev/data</code> 中，如：</p><p><img src="'+r+`" alt="脚手架配置目录截图"></p><h3 id="项目-组件库模板配置" tabindex="-1"><a class="header-anchor" href="#项目-组件库模板配置"><span>项目/组件库模板配置</span></a></h3><p>下面是我创建好的测试配置，你可以使用它来进行测试，请在本地配置目录中创建 <code>project.json</code> ，并将以下代码粘贴到项目模板配置文件中。</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue3-vite标准模板&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;npmName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cjp-cli-dev-template-vue3&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;normal&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token string">&quot;project&quot;</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;ignore&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token string">&quot;**/public/**&quot;</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;installCommand&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npm install&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue3-webpack自定义模板&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;npmName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cjp-cli-dev-template-vue3-admin&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;custom&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token string">&quot;project&quot;</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;ignore&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token string">&quot;**/public/**&quot;</span></span>
<span class="line">    <span class="token punctuation">]</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;通用vue3组件库模板&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;npmName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cjp-cli-dev-template-vue3-component&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.6&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;normal&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token string">&quot;component&quot;</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;ignore&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token string">&quot;**/public/**&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token string">&quot;**/**.png&quot;</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;installCommand&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npm install --registry=https://registry.npmmirror.com&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;startCommand&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npm run serve&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;buildPath&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dist&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;examplePath&quot;</span><span class="token operator">:</span> <span class="token string">&quot;examples&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue3-vite自定义模板&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;npmName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cjp-cli-dev-template-vue3-custom&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;custom&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token string">&quot;project&quot;</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;ignore&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token string">&quot;**/public/**&quot;</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;installCommand&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npm install&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;startCommand&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npm run dev&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue3-webpack移动端标准模板&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;npmName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cjp-cli-dev-template-vue3-webpack-mobile&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;移动端项目，来源于水利门户粤政易端&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;normal&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token string">&quot;project&quot;</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;ignore&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token string">&quot;**/public/**&quot;</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;installCommand&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npm install&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;startCommand&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npm run dev&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="页面模板配置" tabindex="-1"><a class="header-anchor" href="#页面模板配置"><span>页面模板配置</span></a></h3><p>下面是我创建好的测试配置，你可以使用它来进行测试，请在本地配置目录中创建 <code>page.json</code> ，并将以下代码粘贴到项目模板配置文件中。</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue3首页模板&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;用于演示标准ejs渲染的页面模板&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;npmName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cjp-cli-dev-template-vue3-template-page&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;latest&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;targetPath&quot;</span><span class="token operator">:</span> <span class="token string">&quot;src/views/home&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;ignore&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token string">&quot;**/**.png&quot;</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;normal&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue3自定义页面模板&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;npmName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cjp-cli-dev-template-vue3-page-custom&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;用于演示自定义ejs渲染的页面模板，采用vue3+vite搭建&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;latest&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;targetPath&quot;</span><span class="token operator">:</span> <span class="token string">&quot;src/views&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;ignore&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token string">&quot;**/**.png&quot;</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;custom&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="代码片段模板配置" tabindex="-1"><a class="header-anchor" href="#代码片段模板配置"><span>代码片段模板配置</span></a></h3><p>下面是我创建好的测试配置，你可以使用它来进行测试，请在本地配置目录中创建 <code>section.json</code> ，并将以下代码粘贴到项目模板配置文件中。</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue3代码片段模板1&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;npmName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cjp-cli-dev-template-vue3-section&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;latest&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;targetPath&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue3代码片段模板2&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;npmName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cjp-cli-dev-template-vue3-section-template&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;latest&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;targetPath&quot;</span><span class="token operator">:</span> <span class="token string">&quot;src/&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="运行依赖本地配置的脚手架命令" tabindex="-1"><a class="header-anchor" href="#运行依赖本地配置的脚手架命令"><span>运行依赖本地配置的脚手架命令</span></a></h3><p>本地JSON配置完成后，你可以运行脚手架init命令、add命令了。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 初始化项目</span></span>
<span class="line">cjp-cli-dev init my-project</span>
<span class="line"><span class="token comment"># 安装组件代码片段模板，如安装MyComponent组件</span></span>
<span class="line">cjp-cli-dev <span class="token function">add</span> MyComponent</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mongodb配置模板" tabindex="-1"><a class="header-anchor" href="#mongodb配置模板"><span>MongoDB配置模板</span></a></h2><blockquote><p>没有必要需求使用本地JSON配置即可，毕竟配置服务端比较麻烦，也不是每个前端都想学习服务端，随意吧。</p></blockquote><h3 id="前置工作" tabindex="-1"><a class="header-anchor" href="#前置工作"><span>前置工作</span></a></h3><p>你需要先安装MongoDB和UI界面管理工具（Windows推荐MongoDBCompass，MacOS随意）。</p><ul><li><a href="https://www.mongodb.com/try/download/community" target="_blank" rel="noopener noreferrer">MongoDB 下载</a></li><li><a href="https://www.mongodb.com/try/download/compass" target="_blank" rel="noopener noreferrer">MongoDBCompass 下载</a></li><li><a href="https://www.runoob.com/mongodb/mongodb-tutorial.html" target="_blank" rel="noopener noreferrer">MongoDB 参考教程</a></li><li><a href="https://developer.aliyun.com/article/1618937" target="_blank" rel="noopener noreferrer">MongoDBCompass 参考教程</a></li></ul><p>安装完成后需要启动 <code>MongoDB</code> 才能进行连接，以Windows为例，MacOS可搜索相关教程。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">net start MongoDB</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="连接mongodb数据库" tabindex="-1"><a class="header-anchor" href="#连接mongodb数据库"><span>连接MongoDB数据库</span></a></h3><p>打开MongoDBCompass进行连接，默认 <code>localhost:27017</code> ，点击保存并连接后创建数据库和数据表（如果你不知道怎么操作，请点击上面的MongoDBCompass 参考教程链接），如下图所示：</p><p><img src="`+u+`" alt="MongoDB数据库截图"></p><p>操作完成后我们拥有了以下内容，接着只需要插入相应的配置到数据表中即可，你可以按照下面的指引复制JSON插入数据。</p><ul><li><code>cjp-cli-dev数据库</code></li><li><code>project数据表</code>：参考前面文章内容 <code>本地JSON配置</code> &gt; <a href="#%E9%A1%B9%E7%9B%AE-%E7%BB%84%E4%BB%B6%E5%BA%93%E6%A8%A1%E6%9D%BF%E9%85%8D%E7%BD%AE">项目/组件库模板配置</a></li><li><code>page数据表</code>：参考前面文章内容 <code>本地JSON配置</code> &gt; <a href="#%E9%A1%B5%E9%9D%A2%E6%A8%A1%E6%9D%BF%E9%85%8D%E7%BD%AE">页面模板配置</a></li><li><code>section数据表</code>：参考前面文章内容 <code>本地JSON配置</code> &gt; <a href="#%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5%E6%A8%A1%E6%9D%BF%E9%85%8D%E7%BD%AE">代码片段模板配置</a></li></ul><p>表数据插入完成后可以参考如何 <a href="#%E5%90%AF%E5%8A%A8%E6%9C%8D%E5%8A%A1%E7%AB%AF">启动服务端</a> 进行测试。</p><p>目前 <code>init</code>、<code>add</code> 命令支持通过服务端提供的接口连接 <code>MongoDB &gt; cjp-cli-dev数据库</code> 来获取数据。</p><h2 id="启动服务端" tabindex="-1"><a class="header-anchor" href="#启动服务端"><span>启动服务端</span></a></h2><p>主要还是为了学习服务端知识，服务端采用和前端比较贴合的 <code>eggjs</code> 搭建，实现了 <code>云构建</code> 、<code>云发布</code> 等功能，也提供了连接和操作 <code>MongoDB</code> 、<code>Redis</code>、<code>MySQL</code>、<code>OSS</code> 等功能代码，可以作为你的参考。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>别问，问就是穷鬼买不起服务器和域名，需要拉服务端代码来启动。</p></div><h3 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤"><span>步骤</span></a></h3><ol><li>配置 <code>host</code> 域名映射，好处是未来更换任何服务器都可以通过域名映射过去而不用修改源码，推荐安装 <a href="https://github.com/oldj/SwitchHosts/releases" target="_blank" rel="noopener noreferrer">SwitchHost</a> 管理 <code>host</code> 配置。</li></ol><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token comment"># 本地MongoDB和Redis都支持通过127.0.0.1连接</span></span>
<span class="line">127.0.0.1 cjp.clidev.xyz</span>
<span class="line"><span class="token comment"># MySQL连接配置，查看本节文章后面的mysql配置说明，ip需替换为你的WSL IPv4地址</span></span>
<span class="line">172.21.48.1 cjpclidev.top</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>克隆服务端仓库代码。</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 克隆仓库</span></span>
<span class="line"><span class="token function">git</span> clone https://gitee.com/Mr_Mikey/cjp-cli-server.git</span>
<span class="line"><span class="token comment"># 进入项目目录</span></span>
<span class="line"><span class="token builtin class-name">cd</span> cjp-cli-server</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><p>修改OSS配置（已配置好可忽略当前步骤），你需要先去阿里云控制台创建 <code>OSS Bucket</code> ，并打开服务端代码，修改 <code>config/db.js</code> ，替换相关配置，查看 <a href="#oss%E9%85%8D%E7%BD%AE">OSS配置</a> 说明。</p></li><li><p>本地安装并配置MySQL（已配置好可忽略当前步骤），你需要先安装它，查看 <a href="#mysql%E9%85%8D%E7%BD%AE">MySQL配置</a> 说明。</p></li><li><p>运行服务端应用</p></li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 安装依赖</span></span>
<span class="line"><span class="token function">npm</span> <span class="token function">install</span></span>
<span class="line"><span class="token comment"># 启动项目</span></span>
<span class="line"><span class="token function">npm</span> run dev</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="运行依赖服务端的脚手架命令" tabindex="-1"><a class="header-anchor" href="#运行依赖服务端的脚手架命令"><span>运行依赖服务端的脚手架命令</span></a></h3><p>启动服务端成功后，你可以运行脚手架init命令、add命令、publish命令了。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 初始化项目</span></span>
<span class="line">cjp-cli-dev init my-project</span>
<span class="line"><span class="token comment"># 安装页面模板，如安装home页面</span></span>
<span class="line">cjp-cli-dev <span class="token function">add</span> home</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,43)),n("div",M,[s[9]||(s[9]=n("p",{class:"hint-container-title"},"提示",-1)),n("p",null,[s[4]||(s[4]=n("code",null,"publish",-1)),s[5]||(s[5]=a(" 命令也依赖服务端，但由于 ")),s[6]||(s[6]=n("code",null,"publish",-1)),s[7]||(s[7]=a(" 命令具有阿里OSS上传能力、MySQL增删改查数据能力，会单独放在 ")),p(t,{to:"/guide/core-command.html#%E5%8F%91%E5%B8%83---publish%E5%91%BD%E4%BB%A4"},{default:o(()=>s[3]||(s[3]=[a("核心命令 - publish")])),_:1}),s[8]||(s[8]=a(" 中具体说明。"))])]),s[28]||(s[28]=e('<h2 id="模板配置字段说明" tabindex="-1"><a class="header-anchor" href="#模板配置字段说明"><span>模板配置字段说明</span></a></h2><h3 id="项目-组件库模板字段说明" tabindex="-1"><a class="header-anchor" href="#项目-组件库模板字段说明"><span>项目/组件库模板字段说明</span></a></h3><p>项目和组件库模板的配置大部分字段都是一样的，不同的字段会做说明</p><table><thead><tr><th>字段名称</th><th>描述</th><th>数据类型</th><th>是否必填</th><th>默认值</th></tr></thead><tbody><tr><td>name</td><td>项目模板中文名字</td><td>String</td><td>是</td><td>无</td></tr><tr><td>description</td><td>这个项目模板的描述</td><td>String</td><td>否</td><td>无</td></tr><tr><td>npmName</td><td>要安装的npm包名</td><td>String</td><td>是</td><td>无</td></tr><tr><td>version</td><td>要安装的npm包版本（填写版本号或latest）</td><td>String</td><td>是</td><td>无</td></tr><tr><td>type</td><td>项目类型（支持normal、custom）</td><td>String</td><td>是</td><td>无</td></tr><tr><td>tag</td><td>项目类型标记（支持project、component）</td><td>Array&lt;String&gt;</td><td>是</td><td>无</td></tr><tr><td>ignore</td><td>ejs忽略配置（某个目录或者文件不需要ejs渲染）</td><td>Array&lt;String&gt;</td><td>否</td><td>无</td></tr><tr><td>installCommand</td><td>项目安装命令（脚手架命令会读取该参数决定是否自动安装依赖）</td><td>String</td><td>否</td><td>无</td></tr><tr><td>startCommand</td><td>项目启动命令（脚手架命令会读取该参数决定是否自动启动项目）</td><td>String</td><td>否</td><td>无</td></tr></tbody></table>',4)),n("div",L,[s[12]||(s[12]=e('<p class="hint-container-title">提示</p><p><code>type</code> 字段目前支持项目配置 <code>normal</code> 和 <code>custom</code> ，组件库暂时仅支持 <code>normal</code> 。</p><p><code>normal</code> 代表标准项目模板，<code>custom</code> 代表自定义项目模板。</p>',3)),n("p",null,[s[11]||(s[11]=a("请查看 ")),p(t,{to:"/guide/template.html#%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE%E6%A8%A1%E6%9D%BF"},{default:o(()=>s[10]||(s[10]=[a("如何创建项目模板")])),_:1})])]),s[29]||(s[29]=e("<p>组件库模板比项目模板多了两个字段配置，如下：</p><table><thead><tr><th>字段名称</th><th>描述</th><th>数据类型</th><th>是否必填</th><th>默认值</th></tr></thead><tbody><tr><td>buildPath</td><td>构建结果输出路径</td><td>String</td><td>是</td><td>dist</td></tr><tr><td>examplePath</td><td>组件预览页面路径</td><td>String</td><td>是</td><td>examples</td></tr></tbody></table>",2)),n("div",O,[s[15]||(s[15]=n("p",{class:"hint-container-title"},"提示",-1)),s[16]||(s[16]=n("p",null,[n("code",null,"buildPath"),a(" 不需要怎么解释，就是组件库的build命令输出结果路径 。")],-1)),s[17]||(s[17]=n("p",null,[n("code",null,"examplePath"),a(" 表示组件预览示例页面的路径，例如开发一个element-ui，则每个组件对应有一个预览页面可供查看。")],-1)),n("p",null,[s[14]||(s[14]=a("请查看 ")),p(t,{to:"/guide/template.html#%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E7%BB%84%E4%BB%B6%E5%BA%93%E6%A8%A1%E6%9D%BF"},{default:o(()=>s[13]||(s[13]=[a("如何创建组件库模板")])),_:1})])]),s[30]||(s[30]=e('<h3 id="页面模板字段说明" tabindex="-1"><a class="header-anchor" href="#页面模板字段说明"><span>页面模板字段说明</span></a></h3><table><thead><tr><th>字段名称</th><th>描述</th><th>数据类型</th><th>是否必填</th><th>默认值</th></tr></thead><tbody><tr><td>name</td><td>页面模板的中文名字</td><td>String</td><td>是</td><td>无</td></tr><tr><td>description</td><td>这个页面模板的描述</td><td>String</td><td>否</td><td>无</td></tr><tr><td>npmName</td><td>要安装的npm包名</td><td>String</td><td>是</td><td>无</td></tr><tr><td>version</td><td>要安装的npm包版本（填写版本号或latest）</td><td>String</td><td>是</td><td>无</td></tr><tr><td>targetPath</td><td>页面模板的路径（当前模板中有多个页面时指定要安装哪一个）</td><td>String</td><td>是</td><td>无</td></tr><tr><td>type</td><td>页面模板类型（支持normal、custom）</td><td>String</td><td>是</td><td>无</td></tr><tr><td>ignore</td><td>ejs忽略配置（某个目录或者文件不需要ejs渲染）</td><td>Array&lt;String&gt;</td><td>否</td><td>无</td></tr></tbody></table>',2)),n("div",_,[s[20]||(s[20]=n("p",{class:"hint-container-title"},"提示",-1)),s[21]||(s[21]=n("p",null,[n("code",null,"targetPath"),a(" 的作用是指定要安装哪一个页面模板，比如当前提供的模板库中有n个页面模板，你只需要安装 "),n("code",null,"src/views/home"),a(" 页面，则指定该字段即可。")],-1)),n("p",null,[s[19]||(s[19]=a("请查看 ")),p(t,{to:"/guide/template.html#%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E9%A1%B5%E9%9D%A2%E6%A8%A1%E6%9D%BF"},{default:o(()=>s[18]||(s[18]=[a("如何创建页面模板")])),_:1})])]),s[31]||(s[31]=e('<h3 id="代码片段模板字段说明" tabindex="-1"><a class="header-anchor" href="#代码片段模板字段说明"><span>代码片段模板字段说明</span></a></h3><table><thead><tr><th>字段名称</th><th>描述</th><th>数据类型</th><th>是否必填</th><th>默认值</th></tr></thead><tbody><tr><td>name</td><td>代码片段模板的中文名字</td><td>String</td><td>是</td><td>无</td></tr><tr><td>description</td><td>这个代码片段模板的描述</td><td>String</td><td>否</td><td>无</td></tr><tr><td>npmName</td><td>要安装的npm包名</td><td>String</td><td>是</td><td>无</td></tr><tr><td>version</td><td>要安装的npm包版本（填写版本号或latest）</td><td>String</td><td>是</td><td>无</td></tr><tr><td>targetPath</td><td>代码片段模板的路径</td><td>String</td><td>是</td><td>无</td></tr></tbody></table>',2)),n("div",C,[s[24]||(s[24]=n("p",{class:"hint-container-title"},"提示",-1)),s[25]||(s[25]=n("p",null,[n("code",null,"targetPath"),a(" 的作用是指定要安装的代码片段模板路径，比如当前提供的模板库中有n个代码片段模板，你只需要安装 "),n("code",null,"src/component/dialog"),a(" 组件，则指定该字段即可。")],-1)),n("p",null,[s[23]||(s[23]=a("请查看 ")),p(t,{to:"/guide/template.html#%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5%E6%A8%A1%E6%9D%BF"},{default:o(()=>s[22]||(s[22]=[a("如何创建代码片段模板")])),_:1})])]),s[32]||(s[32]=e('<h2 id="redis配置" tabindex="-1"><a class="header-anchor" href="#redis配置"><span>Redis配置</span></a></h2><p><code>Redis</code> 在当前脚手架中用于 <code>publish</code> 命令中管理云构建任务。</p><blockquote><p>没有必要需求调用 <code>publish</code> 命令时指定 <code>--noCloudBuild</code> 参数跳过云构建，毕竟又要安装又要启动服务端连接很麻烦，也不是每个前端都想学习服务端，随意吧。</p></blockquote><h3 id="前置工作-1" tabindex="-1"><a class="header-anchor" href="#前置工作-1"><span>前置工作</span></a></h3><p>你需要先安装Redis。</p><ul><li><a href="https://www.runoob.com/redis/redis-install.html" target="_blank" rel="noopener noreferrer">Redis 下载</a></li><li><a href="https://www.runoob.com/redis/redis-tutorial.html" target="_blank" rel="noopener noreferrer">Redis 参考教程</a></li></ul><h3 id="连接redis" tabindex="-1"><a class="header-anchor" href="#连接redis"><span>连接Redis</span></a></h3><p>脚手架服务端应用已配置好连接本地 <code>Redis</code> 的相关代码，安装完成后你只需要 <a href="#%E5%90%AF%E5%8A%A8%E6%9C%8D%E5%8A%A1%E7%AB%AF">启动服务端</a> 即可连接，本地 <code>Redis</code> 默认连接 <code>127.0.0.1:6379</code> 。如果你有购买如 <code>阿里云Redis</code> 服务，可以修改服务端代码，路径为 <code>源码目录/config/config.default.js</code>，参考下图：</p><p><img src="'+k+'" alt="服务端redis配置参考截图"></p><h2 id="oss配置" tabindex="-1"><a class="header-anchor" href="#oss配置"><span>OSS配置</span></a></h2><p><code>OSS</code> 在当前脚手架中用于 <code>publish</code> 命令上传项目构建结果，后续可通过域名映射来直接访问页面（暂未实现）。</p><h3 id="前置工作-2" tabindex="-1"><a class="header-anchor" href="#前置工作-2"><span>前置工作</span></a></h3><p>你需要先创建好相关 <code>OSS Bucket</code> 和 <code>Access Key</code>。</p><ul><li><a href="https://oss.console.aliyun.com/overview" target="_blank" rel="noopener noreferrer">阿里云OSS管理控制台</a></li><li><a href="https://ram.console.aliyun.com/profile/access-keys" target="_blank" rel="noopener noreferrer">阿里云AccessKey</a></li></ul><blockquote><p>AccessKey ID 和 AccessKey Secret 是你访问阿里云 API 的密钥，具有该账户的完全权限，是脚手架 <code>publish</code> 命令连接 <code>OSS Bucket</code> 创建文件夹并上传文件的关键，请妥善保管。</p></blockquote><p>打开 <a href="https://oss.console.aliyun.com/overview" target="_blank" rel="noopener noreferrer">阿里云OSS管理控制台</a> ，在左侧选择 <code>Bucket列表</code> ，点击 <code>创建 Bucket</code> ，输入 <code>Bucket 名称</code> ，选择离你最近的 <code>地域</code> ，其它选项都默认即可，点击 <code>完成创建</code> 。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>脚手架服务端代码中演示了 <code>发布生产</code> 和 <code>发布测试</code> 环节，对应 <code>cjp-cli</code> 和 <code>cjp-cli-dev</code> 两个 <code>Bucket</code> ，你也需要创建两个 <code>Bucket</code> 来区分生产和测试。</p></div><p><img src="'+m+'" alt="oss创建bucket截图"></p><p>打开 <a href="https://ram.console.aliyun.com/profile/access-keys" target="_blank" rel="noopener noreferrer">阿里云AccessKey</a> ，点击创建AccessKey。</p><p><img src="'+v+'" alt="oss-access-key位置截图"></p><p>2023年7月3日起阿里云主账号创建AccessKey之后访问控制不再提供查询Secret的功能，<a href="https://www.aliyun.com/notice/detail?spm=5176.29412652.J_dNfRwvqdiCuiLSU0gOuJF.2.740b19d5c3KZm6&amp;notice-id=114599" target="_blank" rel="noopener noreferrer">查看公告</a> 。也就是说它只会在你创建的时候显示一次，你需要保管好，之后将不再能查看，忘了只能重新创建。</p><h3 id="修改oss服务端配置" tabindex="-1"><a class="header-anchor" href="#修改oss服务端配置"><span>修改OSS服务端配置</span></a></h3><p>你需要将刚才创建的 <code>AccessKey</code> 复制下来，并在 <code>用户主目录/.cjp-cli-dev/</code> 目录中创建一个 <code>oss_access_secret_key</code> 文件，将复制的Key粘贴保存，服务端会读取该文件中的Key。</p><p>然后打开服务端代码，找到 <code>config/db.js</code> 中的OSS配置信息，修改以下配置，如图所示：</p><p><img src="'+b+`" alt="修改oss配置位置截图"></p><ul><li><code>OSS_ACCESS_KEY_ID</code> ：也就是你刚才创建 <code>AccessKey</code> 的界面显示的 <code>AccessKey ID</code></li><li><code>OSS_PROD_BUCKET</code> ：修改为你刚才创建的生产 <code>Bucket</code> 名称</li><li><code>OSS_DEV_BUCKET</code> ：修改为你刚才创建的测试 <code>Bucket</code> 名称</li><li><code>OSS_REGION</code> ：你创建 <code>Bucket</code> 时选择的地域，一般格式为 <code>oss-cn-城市完整拼音</code></li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p>修改配置完成后你可以 <a href="#%E5%90%AF%E5%8A%A8%E6%9C%8D%E5%8A%A1%E7%AB%AF">启动服务端</a> 来测试 <code>publish</code> 命令 <code>云发布上传OSS</code> 功能。</p></div><h2 id="mysql配置" tabindex="-1"><a class="header-anchor" href="#mysql配置"><span>MySQL配置</span></a></h2><p><code>MySQL</code> 在当前脚手架中用于 <code>publish</code> 命令中管理组件库发布信息和版本信息。</p><blockquote><p>没有必要需求调用 <code>publish</code> 命令时指定 <code>--componentNoDb</code> 参数跳过发布信息写入 <code>MySQL</code> ，毕竟又要安装又要启动服务端连接很麻烦，也不是每个前端都想学习服务端，随意吧。</p></blockquote><h3 id="前置工作-3" tabindex="-1"><a class="header-anchor" href="#前置工作-3"><span>前置工作</span></a></h3><p>你需要先安装 <code>MySQL</code> ，推荐使用 <code>docker</code> 进行安装和启动，否则安装起来特别麻烦。</p><ul><li><a href="https://www.docker.com/" target="_blank" rel="noopener noreferrer">docker 官网下载</a></li><li><a href="https://www.alipan.com/s/EwfKPMc83gt" target="_blank" rel="noopener noreferrer">docker windows下载</a></li></ul><p>docker官方镜像源非常不稳定，安装完成后你需要启动docker应用，并修改为国内镜像。例如：</p><ul><li>阿里云加速 <code>https://d2bgx7ku.mirror.aliyuncs.com</code> （这是我生成的，你也可以自己去生成，查看下面链接）</li><li>网易云加速 <code>https://hub-mirror.c.163.com</code></li><li>百度云加速 <code>https://mirror.baidubce.com</code></li></ul><p><a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors" target="_blank" rel="noopener noreferrer">生成自己的阿里云镜像加速地址 -&gt; 点击管理控制台 -&gt; 登录账号(淘宝账号) -&gt; 左侧镜像工具 -&gt; 镜像加速器 -&gt; 复制加速器地址</a></p><p>可以拷贝我的配置粘贴到下图对应位置，保存重启docker即可。</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;builder&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;gc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token property">&quot;defaultKeepStorage&quot;</span><span class="token operator">:</span> <span class="token string">&quot;20GB&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;enabled&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;experimental&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;registry-mirrors&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token string">&quot;https://registry.docker-cn.com&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;https://registry.cn-hangzhou.aliyuncs.com&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;http://hub-mirror.c.163.com&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;https://mirror.baidubce.com&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;https://d2bgx7ku.mirror.aliyuncs.com&quot;</span></span>
<span class="line">  <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改docker镜像源截图</p><p><img src="`+h+'" alt="docker引擎修改位置截图"></p><h3 id="使用docker安装并启动mysql" tabindex="-1"><a class="header-anchor" href="#使用docker安装并启动mysql"><span>使用docker安装并启动MySQL</span></a></h3><p>你需要先创建一个文件夹如 <code>mysql</code>，并在文件夹中创建 <code>conf</code>、<code>db</code>、<code>log</code> 三个目录，用来挂载MySQL的运行配置和日志文件，如下图：</p><p><img src="'+g+`" alt="mysql挂载目录截图"></p><p>这里有一份 <code>docker-compose</code> 配置，代码如下，你需要在 <code>mysql</code> 目录中创建 <code>docker-compose.yml</code> 文件。</p><blockquote><p>PS：感谢我强哥教我怎么使用docker安装和连接 <code>MySQL</code> 。斯密码喽☺</p></blockquote><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">services</span><span class="token punctuation">:</span></span>
<span class="line"> <span class="token key atrule">mysql</span><span class="token punctuation">:</span></span>
<span class="line">   <span class="token key atrule">image</span><span class="token punctuation">:</span> mysql<span class="token punctuation">:</span><span class="token number">5.7</span></span>
<span class="line">   <span class="token key atrule">container_name</span><span class="token punctuation">:</span> mysql</span>
<span class="line">   <span class="token key atrule">command</span><span class="token punctuation">:</span> mysqld <span class="token punctuation">-</span><span class="token punctuation">-</span>character<span class="token punctuation">-</span>set<span class="token punctuation">-</span>server=utf8mb4 <span class="token punctuation">-</span><span class="token punctuation">-</span>collation<span class="token punctuation">-</span>server=utf8mb4_unicode_ci <span class="token punctuation">-</span><span class="token punctuation">-</span>default<span class="token punctuation">-</span>time_zone=&#39;+8<span class="token punctuation">:</span>00&#39; <span class="token punctuation">-</span><span class="token punctuation">-</span>lower_case_table_names=1</span>
<span class="line">   <span class="token key atrule">restart</span><span class="token punctuation">:</span> always</span>
<span class="line">   <span class="token key atrule">environment</span><span class="token punctuation">:</span></span>
<span class="line">     <span class="token key atrule">MYSQL_ROOT_PASSWORD</span><span class="token punctuation">:</span> <span class="token string">&quot;Abc@123#pwd!&quot;</span> <span class="token comment">#设置root帐号密码</span></span>
<span class="line">     <span class="token key atrule">TZ</span><span class="token punctuation">:</span> <span class="token string">&quot;Asia/Shanghai&quot;</span></span>
<span class="line">   <span class="token key atrule">ports</span><span class="token punctuation">:</span></span>
<span class="line">     <span class="token punctuation">-</span> 3306<span class="token punctuation">:</span><span class="token number">3306</span></span>
<span class="line">   <span class="token key atrule">volumes</span><span class="token punctuation">:</span></span>
<span class="line">     <span class="token punctuation">-</span> ./db<span class="token punctuation">:</span>/var/lib/mysql <span class="token comment">#数据文件挂载</span></span>
<span class="line">     <span class="token punctuation">-</span> ./conf<span class="token punctuation">:</span>/etc/mysql/conf.d <span class="token comment">#配置文件挂载</span></span>
<span class="line">     <span class="token punctuation">-</span> ./log<span class="token punctuation">:</span>/var/log/mysql <span class="token comment">#日志文件挂载</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行终端，执行 <code>docker-compose</code> 拉取 mysql 镜像并启动</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 进入mysql文件夹</span></span>
<span class="line"><span class="token builtin class-name">cd</span> mysql</span>
<span class="line"><span class="token comment"># 启动docker-compose</span></span>
<span class="line"><span class="token function">docker-compose</span> up</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动成功截图</p><p><img src="`+q+'" alt="docker启动mysql成功截图"></p><h3 id="连接mysql并创建数据库和数据表" tabindex="-1"><a class="header-anchor" href="#连接mysql并创建数据库和数据表"><span>连接MySQL并创建数据库和数据表</span></a></h3><div class="hint-container tip"><p class="hint-container-title">提示</p><p><strong>注意：一定要使用本机 <code>WSL</code> 的 <code>IPv4</code> 地址才能正常连接 <code>MySQL</code> 。</strong></p><p>你可以打开终端运行 <code>ipconfig</code> 命令来查看 <code>WSL</code> 的 <code>IPv4</code> 地址，如下图</p></div><p><img src="'+y+'" alt="WSL-IPv4截图"></p><h4 id="客户端连接mysql" tabindex="-1"><a class="header-anchor" href="#客户端连接mysql"><span>客户端连接MySQL</span></a></h4><p>需要先安装连接软件，我使用 Windows 的 <code>DBeaver</code> 软件进行连接示例，你想用其它软件也可以，MacOS 请随意。</p><p>这里有一份 Windows 版本的 <a href="https://www.alipan.com/s/EwfKPMc83gt" target="_blank" rel="noopener noreferrer">DBeaver</a> 下载链接。</p><p>安装完成后打开 <code>DBeaver</code> 创建新的连接，你可以通过 <code>ipconfig</code> 命令来查看 <code>WSL</code> 的 <code>IPv4</code> 地址，默认端口为 <code>3306</code> ，用户名为 <code>root</code> ，密码是你在 <code>docker-compose.yml</code> 文件中的 <code>MYSQL_ROOT_PASSWORD</code> 属性值，你可以自行修改，但修改后你需要重新启动 <code>docker-compose</code> 运行 <code>MySQL</code> 并再次连接。</p><p><img src="'+E+'" alt="dbeaver连接截图"></p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果你想在电脑上查看数据库的情况，比如测试 <code>publish</code> 命令发布组件信息写入 <code>MySQL</code> 是否成功，使用UI界面方便很多。</p><p>需要先创建数据库和数据表以及表字段后，脚手架服务端才能连接并进行操作，后面会演示如何通过 <code>DBeaver</code> 创建数据库和数据表。</p><p>当然如果你是个大佬，知道怎么用SQL语句来建库建表可以忽略这一步。但我觉得你不会，否则你也不至于要看这个菜鸡作者写的文档，还是老老实实接着看吧。</p></div><h4 id="修改host配置" tabindex="-1"><a class="header-anchor" href="#修改host配置"><span>修改host配置</span></a></h4><p>脚手架服务端应用配置了通过 <code>cjpclidev.top</code> 域名来连接 <code>MySQL</code>，你需要将域名映射到 <code>WSL</code> 的 <code>IPv4</code> 地址。</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token comment"># 请将172.21.48.1替换成你的`WSL` 的 `IPv4` 地址</span></span>\n<span class="line">172.21.48.1 cjpclidev.top</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>不知道怎么查看？<a href="#%E8%BF%9E%E6%8E%A5mysql%E5%B9%B6%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8C%E6%95%B0%E6%8D%AE%E8%A1%A8">如何查看本机 WSL IPv4 地址</a></p><h4 id="创建数据库" tabindex="-1"><a class="header-anchor" href="#创建数据库"><span>创建数据库</span></a></h4><p>在 <code>DBeaver</code> 中新建数据库，库名 <code>cjp-cli-dev</code>，字符集选择 <code>utf8mb4</code>，排序规则选择 <code>utf8mb4_unicode_ci</code>，如下图，点击确认创建即可。</p><p><img src="'+A+'" alt="dbeaver创建数据库截图"></p><h4 id="创建数据表" tabindex="-1"><a class="header-anchor" href="#创建数据表"><span>创建数据表</span></a></h4><p>这里我们需要创建两张表，脚手架服务端应用会操作这两张数据表来管理组件发布信息和版本记录信息。</p><table><thead><tr><th>表名</th><th>备注</th></tr></thead><tbody><tr><td>component_test</td><td>管理组件发布信息</td></tr><tr><td>version_test</td><td>管理组件版本发布记录信息</td></tr></tbody></table><p>在 <code>DBeaver</code> 中操作创建，右键点击 <code>cjp-cli-dev</code> 数据库，选择 <code>SQL编辑器</code>。</p><p><img src="'+w+'" alt="dbeaver创建数据表截图"></p><p>编写SQL建表语句，请将下面的<code>component_test</code> SQL建表语句代码粘贴到 <code>DBeaver</code> 新开窗口中。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>注意这里要选 <code>New script</code>，否则会创建失败。</p></div><p><img src="'+S+`" alt="dbeaver创建数据表截图"></p><p><code>component_test</code> SQL建表语句代码如下：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> component_test <span class="token punctuation">(</span></span>
<span class="line">    id <span class="token keyword">INT</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span></span>
<span class="line">    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;项目名称&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    description <span class="token keyword">TEXT</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;描述&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    npm_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;npm包名&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    npm_version <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;项目版本&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    git_type <span class="token keyword">ENUM</span><span class="token punctuation">(</span><span class="token string">&#39;github&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;gitee&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;gitlab&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bitbucket&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;other&#39;</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;git托管平台&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    git_remote <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;远程仓库地址&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    git_owner <span class="token keyword">ENUM</span><span class="token punctuation">(</span><span class="token string">&#39;org&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;user&#39;</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;登录类型&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    git_login <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;登录名&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">status</span> <span class="token keyword">TINYINT</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">1</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;状态 (0 或 1)，默认 1&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    create_dt <span class="token keyword">BIGINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;创建时间（时间戳）&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    create_by <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;创建者登录名&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    update_dt <span class="token keyword">BIGINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;更新时间（时间戳）&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    update_by <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;更新者登录名&#39;</span></span>
<span class="line"><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span><span class="token operator">=</span><span class="token string">&#39;组件信息表&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>点击执行按钮，执行SQL建表语句，创建 <code>component_test</code> 表，如下图</p><p><img src="`+B+'" alt="dbeaver创建数据表截图"></p><p>执行脚本如果没有报错，鼠标右键【表】，点刷新后可以看到创建的 <code>component_test</code> 表，如下图</p><p><img src="'+f+`" alt="dbeaver创建数据表截图"></p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>请按照前面创建 <code>component_test</code> 的步骤创建 <code>version_test</code> 表，创建完成后你可以 <a href="#%E5%90%AF%E5%8A%A8%E6%9C%8D%E5%8A%A1%E7%AB%AF">启动服务端</a> 来测试 <code>publish</code> 命令 <code>云构建</code>、<code>云发布</code> 功能。</p></div><p><code>version_test</code> SQL建表语句代码如下：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> version_test <span class="token punctuation">(</span></span>
<span class="line">    id <span class="token keyword">INT</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span></span>
<span class="line">    component_id <span class="token keyword">INT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;组件id&#39;</span><span class="token punctuation">,</span>  <span class="token comment">-- 修改为INT类型，与component_test表的id字段匹配</span></span>
<span class="line">    version <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;组件版本&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    build_path <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;打包文件路径&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    example_path <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;演示路径&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    example_list <span class="token keyword">TEXT</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;演示文件列表&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    example_real_path <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;演示文件真实路径&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">status</span> <span class="token keyword">TINYINT</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">1</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;状态，0 或 1，默认 1&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    create_dt <span class="token keyword">BIGINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;创建时间（时间戳）&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    create_by <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;创建者登录名&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    update_dt <span class="token keyword">BIGINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;更新时间（时间戳）&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    update_by <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;更新者登录名&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>component_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> component_test<span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token comment">-- 添加外键约束</span></span>
<span class="line"><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span><span class="token operator">=</span><span class="token string">&#39;组件版本信息表&#39;</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="全局环境变量配置" tabindex="-1"><a class="header-anchor" href="#全局环境变量配置"><span>全局环境变量配置</span></a></h2><p>脚手架支持全局环境变量配置，默认情况下你不需要管，如果有需求，你可以在磁盘用户主目录下配置以下属性，后续有新增的配置也是在这里看。</p><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>process.env.CLI_HOME</td><td>用户主目录（读取用户主目录下的.env文件）</td></tr><tr><td>process.env.CJP_CLI_DEV_BASE_URL</td><td>接口请求前缀（读取用户主目录下的.env文件）</td></tr></tbody></table><p>Windows系统截图：</p><p><img src="`+N+'" alt="全局环境变量配置截图"></p>',88))])}const x=l(j,[["render",D],["__file","configuration.html.vue"]]),I=JSON.parse('{"path":"/guide/configuration.html","title":"配置","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"本地JSON配置模板","slug":"本地json配置模板","link":"#本地json配置模板","children":[{"level":3,"title":"项目/组件库模板配置","slug":"项目-组件库模板配置","link":"#项目-组件库模板配置","children":[]},{"level":3,"title":"页面模板配置","slug":"页面模板配置","link":"#页面模板配置","children":[]},{"level":3,"title":"代码片段模板配置","slug":"代码片段模板配置","link":"#代码片段模板配置","children":[]},{"level":3,"title":"运行依赖本地配置的脚手架命令","slug":"运行依赖本地配置的脚手架命令","link":"#运行依赖本地配置的脚手架命令","children":[]}]},{"level":2,"title":"MongoDB配置模板","slug":"mongodb配置模板","link":"#mongodb配置模板","children":[{"level":3,"title":"前置工作","slug":"前置工作","link":"#前置工作","children":[]},{"level":3,"title":"连接MongoDB数据库","slug":"连接mongodb数据库","link":"#连接mongodb数据库","children":[]}]},{"level":2,"title":"启动服务端","slug":"启动服务端","link":"#启动服务端","children":[{"level":3,"title":"步骤","slug":"步骤","link":"#步骤","children":[]},{"level":3,"title":"运行依赖服务端的脚手架命令","slug":"运行依赖服务端的脚手架命令","link":"#运行依赖服务端的脚手架命令","children":[]}]},{"level":2,"title":"模板配置字段说明","slug":"模板配置字段说明","link":"#模板配置字段说明","children":[{"level":3,"title":"项目/组件库模板字段说明","slug":"项目-组件库模板字段说明","link":"#项目-组件库模板字段说明","children":[]},{"level":3,"title":"页面模板字段说明","slug":"页面模板字段说明","link":"#页面模板字段说明","children":[]},{"level":3,"title":"代码片段模板字段说明","slug":"代码片段模板字段说明","link":"#代码片段模板字段说明","children":[]}]},{"level":2,"title":"Redis配置","slug":"redis配置","link":"#redis配置","children":[{"level":3,"title":"前置工作","slug":"前置工作-1","link":"#前置工作-1","children":[]},{"level":3,"title":"连接Redis","slug":"连接redis","link":"#连接redis","children":[]}]},{"level":2,"title":"OSS配置","slug":"oss配置","link":"#oss配置","children":[{"level":3,"title":"前置工作","slug":"前置工作-2","link":"#前置工作-2","children":[]},{"level":3,"title":"修改OSS服务端配置","slug":"修改oss服务端配置","link":"#修改oss服务端配置","children":[]}]},{"level":2,"title":"MySQL配置","slug":"mysql配置","link":"#mysql配置","children":[{"level":3,"title":"前置工作","slug":"前置工作-3","link":"#前置工作-3","children":[]},{"level":3,"title":"使用docker安装并启动MySQL","slug":"使用docker安装并启动mysql","link":"#使用docker安装并启动mysql","children":[]},{"level":3,"title":"连接MySQL并创建数据库和数据表","slug":"连接mysql并创建数据库和数据表","link":"#连接mysql并创建数据库和数据表","children":[]}]},{"level":2,"title":"全局环境变量配置","slug":"全局环境变量配置","link":"#全局环境变量配置","children":[]}],"git":{"updatedTime":1732078165000,"contributors":[{"name":"v_jpch","email":"v_jpch.digitalgd.com","commits":11,"url":"https://github.com/v_jpch"}]},"filePathRelative":"guide/configuration.md"}');export{x as comp,I as data};
